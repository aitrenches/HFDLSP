{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<ul> <li>Overview of the project, its purpose, and goals.</li> <li>Brief description of the technology stack and frameworks used.</li> </ul>"},{"location":"api_documentation/","title":"Api documentation","text":"<p>This page contains information about the APIs available in the project, you can check out the Swagger documentation for detailed information about each of the endpoints.</p>"},{"location":"api_documentation/#authentication","title":"Authentication","text":"<p>When setting up the app, you can add an environment variable <code>API_KEY</code> as specified in the project settings. This API Key is what you will need to provide when making API requests to the app via the <code>Authorization</code> header.</p>"},{"location":"api_documentation/#endpoints","title":"Endpoints","text":""},{"location":"api_documentation/#dataset-retrieval-endpoint","title":"Dataset retrieval endpoint","text":"<p><code>GET /fetch_dataset?dataset=&lt;dataset_id&gt;</code></p> <p>This endpoint allows you to add a new dataset from HuggingFace into your Neo4j database instance. The <code>dataset_id</code> should be provided as configured in your project settings.</p>"},{"location":"api_documentation/#dataset-query-endpoint","title":"Dataset query endpoint","text":"<p><code>GET /result?dataset=&lt;dataset_id&gt;&amp;query=&lt;query&gt;</code></p> <p>This endpoint allows you to retrieve the result to a query from a dataset. The dataset needs to have first been added for you to be able to get a valid result.</p> <p>For more information and sample requests and responses, please check out the Swagger API doc.</p>"},{"location":"architecture/","title":"Architecture","text":"<ul> <li>High-level architecture: Diagrams and descriptions of the system architecture, including the backend, frontend, and any external services.</li> <li>Database schema: Details about the database design, including entity relationships. </li> </ul>"},{"location":"architecture/#high-level-architecture","title":"High-Level Architecture","text":""},{"location":"architecture/#overview","title":"Overview","text":"<p>The architecture of your system can be described as a three-tier setup:</p> <ol> <li> <p>Frontend/API Layer: This layer serves as the interface for users or applications to interact with your system. It exposes a Swagger-based API that allows for operations like fetching and storing datasets from Hugging Face.</p> </li> <li> <p>Backend/Business Logic Layer: This layer contains the logic for processing data, handling API requests, and communicating with external services (like Hugging Face) and the database.</p> </li> <li> <p>Database Layer: Leveraging Neo4j, a graph-based database, this layer is responsible for persistently storing and managing datasets fetched from Hugging Face.</p> </li> </ol>"},{"location":"architecture/#diagram","title":"Diagram","text":""},{"location":"architecture/#database-schema","title":"Database Schema","text":""},{"location":"architecture/#overview_1","title":"Overview","text":"<p>The database schema reflects the structure of the data stored in Neo4j. Based on your provided models, it seems to focus on different datasets with relationships to other nodes for specific datasets.</p> <ol> <li> <p>Base Node - <code>HuggingFaceDataset</code>: Represents the basic dataset node with common properties like <code>uid</code> and <code>created_at</code>.</p> </li> <li> <p>Inherited Nodes:</p> </li> <li><code>TreeOfKnowledgeDataset</code>: Inherits from <code>HuggingFaceDataset</code>, specific for storing question-answer pairs.</li> <li><code>HotpotQADataset</code>: Similar to <code>TreeOfKnowledgeDataset</code> but includes additional context information.</li> <li> <p><code>TimeQADataset</code>: Stores question and context, with a relationship to <code>TimeQAAnswer</code> for storing answers.</p> </li> <li> <p>Related Node - <code>TimeQAAnswer</code>: Stores answer values and is related to <code>TimeQADataset</code>.</p> </li> </ol>"},{"location":"architecture/#diagram_1","title":"Diagram","text":""},{"location":"changelog/","title":"Changelog","text":"<ul> <li>Detailed log of changes made in each version of the application.</li> </ul>"},{"location":"contributing/","title":"Contributing","text":"<ul> <li>Guidelines for contributing to the project, including how to submit pull requests and report bugs.</li> </ul>"},{"location":"deployment/","title":"Deployment","text":"<ul> <li>AWS and EC2 setup: Step-by-step guide on deploying the application on AWS EC2.</li> <li>CI/CD Pipeline: Details about the CI/CD setup using Azure Pipelines, including pipeline configuration and deployment strategies.</li> </ul>"},{"location":"development_practices/","title":"Development practices","text":"<ul> <li>Code style guidelines: Coding standards and style guidelines to maintain consistency.</li> <li>Branching strategy: Explanation of the version control strategy and branch management.</li> </ul>"},{"location":"faqs/","title":"Faqs","text":"<ul> <li>Frequently asked questions about the application, its usage, and any common technical queries.</li> </ul>"},{"location":"faqs/#frequently-asked-questions-faqs-for-the-application","title":"Frequently Asked Questions (FAQs) for the Application","text":""},{"location":"faqs/#general-usage","title":"General Usage","text":""},{"location":"faqs/#q1-what-is-the-primary-purpose-of-this-application","title":"Q1: What is the primary purpose of this application?","text":"<p>A: The application is designed to provide answers from the <code>HuggingFaceDataset</code> based on user-submitted questions. It's a tool for querying a dataset to retrieve specific information related to question-answering tasks.</p>"},{"location":"faqs/#q2-how-do-i-submit-a-question-to-the-application","title":"Q2: How do I submit a question to the application?","text":"<p>A: Questions can be submitted through the application's user interface, typically through an API. Enter your question and submit it to receive an answer.</p>"},{"location":"faqs/#q3-is-there-a-limit-to-the-number-of-questions-i-can-ask","title":"Q3: Is there a limit to the number of questions I can ask?","text":"<p>A: Generally, there is no set limit. However, usage may be subject to fair use policies to ensure stable performance for all users.</p>"},{"location":"faqs/#technical-queries","title":"Technical Queries","text":""},{"location":"faqs/#q1-what-technologies-does-the-application-use","title":"Q1: What technologies does the application use?","text":"<p>A: The application is built using Django, a high-level Python web framework. It relies on the <code>HuggingFaceDataset</code> model for data storage and retrieval.</p>"},{"location":"faqs/#q2-how-is-data-stored-in-the-application","title":"Q2: How is data stored in the application?","text":"<p>A: Data is stored in the <code>HuggingFaceDataset</code> model, which is part of the application's database. It includes fields for the question, answer, and additional context.</p>"},{"location":"faqs/#q3-can-i-access-the-application-offline","title":"Q3: Can I access the application offline?","text":"<p>A: No, the application requires an internet connection to access the dataset and retrieve answers to questions.</p>"},{"location":"faqs/#common-issues","title":"Common Issues","text":""},{"location":"faqs/#q1-what-should-i-do-if-i-get-incorrect-answers","title":"Q1: What should I do if I get incorrect answers?","text":"<p>A: Ensure that your question is clear and specific. If the issue persists, report it to the support team for further investigation.</p>"},{"location":"faqs/#q2-the-application-is-not-responding-what-should-i-do","title":"Q2: The application is not responding. What should I do?","text":"<p>A: Check your internet connection first. If the problem persists, try restarting the application or contact technical support.</p>"},{"location":"faqs/#q3-how-can-i-report-a-bug-or-suggest-a-feature","title":"Q3: How can I report a bug or suggest a feature?","text":"<p>A: Bugs and feature suggestions can be reported through the application's feedback or support section.</p>"},{"location":"faqs/#data-and-privacy","title":"Data and Privacy","text":""},{"location":"faqs/#q1-is-my-data-safe-when-using-this-application","title":"Q1: Is my data safe when using this application?","text":"<p>A: Yes, data privacy and security are top priorities. Personal information is protected according to data protection laws and regulations.</p>"},{"location":"faqs/#q2-does-the-application-track-my-usage","title":"Q2: Does the application track my usage?","text":"<p>A: Usage metrics may be collected for improving the service, but personal identifiable information is not tracked without consent.</p>"},{"location":"faqs/#q3-can-i-request-the-deletion-of-my-data","title":"Q3: Can I request the deletion of my data?","text":"<p>A: Yes, you can request data deletion by contacting the support team, subject to the terms of service and data retention policies.</p>"},{"location":"faqs/#support-and-contact","title":"Support and Contact","text":""},{"location":"faqs/#q1-how-do-i-get-technical-support","title":"Q1: How do I get technical support?","text":"<p>A: Technical support can be reached through the application's help section or via the provided contact details.</p>"},{"location":"faqs/#q2-where-can-i-find-updates-about-the-application","title":"Q2: Where can I find updates about the application?","text":"<p>A: Updates are typically announced on the application's website, through email newsletters, or on its social media channels.</p>"},{"location":"faqs/#q3-is-there-a-user-guide-or-manual-for-the-application","title":"Q3: Is there a user guide or manual for the application?","text":"<p>A: Yes, a comprehensive user guide is available on the application's website, which includes detailed instructions on using the application.</p>"},{"location":"getting_started/","title":"Getting started","text":"<ul> <li>Setup instructions: Details on how to set up the project locally, including environment setup and dependencies.</li> <li>Configuration details: Explanation of configuration files and environment variables.</li> </ul>"},{"location":"references/","title":"References","text":"<ul> <li>Links to external resources, API references, or further readings.</li> </ul>"},{"location":"security/","title":"Security","text":"<ul> <li>Security practices: Explanation of security measures implemented in the application, including data encryption, secure API design, etc.</li> <li>Vulnerability management: How vulnerabilities are identified and managed.</li> </ul>"},{"location":"testing/","title":"Testing","text":"<ul> <li>Testing strategies: Overview of the testing approach, including unit and integration testing.</li> <li>Test cases: Detailed description of important test cases and how to run tests.</li> </ul>"},{"location":"testing/#testing-approach","title":"Testing Approach","text":"<p>Unit Testing: Focuses on testing the fetch_dataset_answer_by_question function in isolation. Mocking is used to simulate the behavior of the HuggingFaceDataset model to ensure that tests are not dependent on the database or external factors.</p> <p>Integration Testing: Ensures that the fetch_dataset_answer_by_question function interacts correctly with the HuggingFaceDataset model and the database. This tests the function in a scenario that is close to its real usage within the application.</p>"},{"location":"testing/#test-environment-setup","title":"Test Environment Setup","text":"<p>Ensure Django is installed and configured correctly. The test cases are written using Django\u2019s built-in TestCase class. For unit tests, the unittest.mock library is used for mocking. Running Tests Tests can be run using the Django test runner. </p> <p>Execute the following command in the terminal from the root of the Django project:</p> <p><code>python manage.py test</code></p>"},{"location":"testing/#unit-tests","title":"Unit Tests","text":""},{"location":"testing/#test-invalid-dataset","title":"Test Invalid Dataset:","text":"<p>Description: Tests the response of the function when an invalid dataset ID is provided. Execution: Call fetch_dataset_answer_by_question with an invalid dataset ID and a sample question. Expected Result: The function should return None. Test No Dataset With Question (Mocked):</p> <p>Description: Tests the function's behavior when no dataset matches the provided question. Setup: Mock HuggingFaceDataset.nodes to return None. Execution: Call fetch_dataset_answer_by_question with a valid dataset ID and a question that does not exist in the dataset. Expected Result: The function should return None. Test Valid Dataset (Mocked):</p> <p>Description: Validates the function's ability to return the correct answer for a valid question. Setup: Mock HuggingFaceDataset.nodes to return a predefined dataset object. Execution: Call fetch_dataset_answer_by_question with a valid dataset ID and a question that exists in the mocked dataset. Expected Result: The function should return the corresponding answer from the mocked dataset.</p>"},{"location":"testing/#integration-tests","title":"Integration Tests","text":""},{"location":"testing/#test-invalid-dataset_1","title":"Test Invalid Dataset:","text":"<p>Description:  Similar to the unit test, but in an integrated environment. Execution:  Identical to the unit test case. Expected Result:  Identical to the unit test case. Test No Dataset With Question:</p> <p>Description: Tests the function's behavior in an integrated environment when no dataset matches the provided question. Execution: Call fetch_dataset_answer_by_question with a valid dataset ID and a non-existent question. Expected Result: The function should return None. Test Valid Dataset:</p> <p>Description: Validates the function's ability in an integrated environment to return the correct answer for a valid question. Execution: Call fetch_dataset_answer_by_question with a valid dataset ID and a question that exists in the real dataset. Expected Result: The function should return the corresponding answer from the dataset.</p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Common issues: List of common problems and their solutions.</li> <li>Debugging tips: Tips for effectively debugging issues in the application.</li> </ul>"}]}